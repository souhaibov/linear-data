ALGORITHM hash_solution
VAR
      set1,set2 : HASH_TABLE<INTEGER,INTEGER>;
      som : ARRAY_OF INTEGER[10];
    i,j,k,nb:INTEGER;
    sum :INTEGER;
    res:BOOLEAN;
    ch :STRING ;
BEGIN
//remplisage des hash_tab
     set1.insert(0,13);
   set1.insert(1,12);
   set1.insert(2,6);
   set1.insert(3,10);
   Write(set1);
    set2.insert(0,13);
   set2.insert(1,10);
   set2.insert(2,5);
   set2.insert(3,8);
   Write(set2);
   

   sum:=0;
    ch:="éléments qui se chevauchent:"
    
        k:=0;
            FOR i FROM 0 TO 3 STEP 1  DO
                
   // recherche de l element dans la 2 eme hash_tab
    res:=false;
    FOR j FROM 0 TO 3 STEP 1  DO
        IF (set1.get(i)=set2.get(j)) THEN
            res:=true;BREAK;
        
        END_IF
    END_FOR
    //si les éléments  se chevauchent  ajouter sa valeur au tab som
    IF (res=true) THEN
        som[k]:=set1.get(i);
        k:=k+1;
    END_IF

END_FOR
       k:=0;
       FOR i FROM 0 TO 3 STEP 1  DO
   // recherche de l element dans la 1 ere hash_tab
    res:=false;
    FOR j FROM 0 TO 3 STEP 1  DO
        IF (set2.get(i)=set1.get(j)) THEN
            res:=true;BREAK;
        
        END_IF
    END_FOR
    //si les éléments  se chevauchent ajouter sa valeur au somme
     IF (res=true) THEN
        som[k]:=set2.get(i);
        k:=k+1;
    END_IF

END_FOR

//calculer le somme des elements qui se chevauchent
FOR i FROM 0 TO som.length-1 STEP 1  DO
    sum:=sum+som[i];
    ch:=ch.Concat(som[i]);
    ch:=ch.Concat(" , ");
END_FOR


        //affichage de resultat
         Write(sum);
         Write(ch);



END